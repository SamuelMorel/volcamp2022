# File database in parent directory
quarkus.datasource.db-kind=h2
quarkus.datasource.username=username
quarkus.datasource.jdbc.url=jdbc:h2:file:../database;AUTO_SERVER=TRUE
%dev.quarkus.hibernate-orm.database.generation=update
# OIDC
quarkus.oidc.auth-server-url=${AUTH0_AUTH_URL}
quarkus.oidc.client-id=${AUTH0_CLIENT_ID}
quarkus.oidc.credentials.secret=${AUTH0_CLIENT_SECRET}
quarkus.oidc.audience=${AUTH0_CLIENT_AUDIENCE}
quarkus.oidc.application-type=service
quarkus.rest-client.oidc-rest-client.url=${AUTH0_AUTH_URL}/oauth/token
quarkus.rest-client.oidc-rest-client.scope=javax.inject.Singleton
# secured endpoints
quarkus.http.auth.permission.secured.paths=/*
quarkus.http.auth.permission.secured.policy=authenticated
# public endpoint
quarkus.http.auth.permission.public.paths=/token/login
quarkus.http.auth.permission.public.policy=permit
quarkus.http.auth.permission.public.methods=POST
# Dev Quarkus endpoint
%dev.quarkus.http.auth.permission.dev.paths=/q/*
%dev.quarkus.http.auth.permission.dev.policy=permit
quarkus.oidc.authentication.scopes=openid,profile,email,${AUTH0_CLIENT_AUDIENCE}
# allow GraphQL mapper to lazy load collections
# TODO: find a better way, this is :puke:
quarkus.hibernate-orm.unsupported-properties."hibernate.enable_lazy_load_no_trans"=true
# what to display in exception
quarkus.smallrye-graphql.error-extension-fields=message,code,description,validationErrorType,queryPath
# Display these exceptions to client
quarkus.smallrye-graphql.show-runtime-exception-message=\
  org.volcamp.api.exception.BadRequestException,\
  org.volcamp.api.exception.MultipleResultsFound